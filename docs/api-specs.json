{
  "openapi": "3.0.3",
  "info": {
    "title": "Eduflex RESTful API Documentation 1.0",
    "description": "Ini adalah dokumentasi RESTful API untuk kursus online Eduflex.",
    "version": "1.0.1"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://api-eduflex.cloud"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Everything about user"
    },
    {
      "name": "media",
      "description": "Everthing about media"
    },
    {
      "name": "courses",
      "description": "Everthing about courses"
    },
    {
      "name": "chapters",
      "description": "Everything about chapters"
    },
    {
      "name": "lessons",
      "description": "Everything about lessons"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This is done to register a new account",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "profession": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register user",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Success register user",
                    "value": {
                      "data": {
                        "id": 1
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "examples": {
                  "validationerror": {
                    "description": "Validation error",
                    "value": {
                      "errors": {
                        "name": [
                          "The 'name' field is required."
                        ],
                        "email": [
                          "The 'email' field is required."
                        ],
                        "password": [
                          "The 'password' field is required."
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Credentials not found in database"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get current user in active session",
        "description": "",
        "operationId": "getUser",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "profession": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid token"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "profession": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      }
    },
     "/users/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success logout user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/media": {
      "get": {
        "tags": [
          "media"
        ],
        "summary": "Show all uploaded media",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "image": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      },
      "post": {
        "tags": [
          "media"
        ],
        "summary": "Upload media",
        "description": "Upload media in base64 format",
        "operationId": "uploadMedia",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "image": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      }
    },
    "/media/{id}": {
      "delete": {
        "tags": [
          "media"
        ],
        "summary": "Delete media",
        "description": "Delete media from database",
        "operationId": "deleteMedia",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Image has been deleted!"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Show all courses",
        "description": "",
        "responses": {
          "200": {
            "description": "Success get all data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "certificate": {
                          "type": "boolean"
                        },
                        "thumbnail": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "price": {
                          "type": "integer"
                        },
                        "level": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "summary": "Create courses",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "certificate": {
                    "type": "boolean"
                  },
                  "thumbnail": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "price": {
                    "type": "integer"
                  },
                  "level": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "mentor_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "mentor_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "certificate": {
                          "type": "boolean"
                        },
                        "thumbnail": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "price": {
                          "type": "integer"
                        },
                        "level": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Credentials not found in database"
          }
        }
      }
    },
    "/courses/{id}": {
      "put": {
        "tags": [
          "courses"
        ],
        "summary": "Update courses",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "These attributes are optional. You can update 1/2 attribute.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "certificate": {
                    "type": "boolean"
                  },
                  "thumbnail": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "price": {
                    "type": "integer"
                  },
                  "level": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "mentor_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Course updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "mentor_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "certificate": {
                          "type": "boolean"
                        },
                        "thumbnail": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "price": {
                          "type": "integer"
                        },
                        "level": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      },
      "delete": {
        "tags": [
          "courses"
        ],
        "summary": "Delete courses",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Course has been deleted!"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      }
    },
    "/chapters": {
      "get": {
        "tags": [
          "chapters"
        ],
        "summary": "Show all chapters",
        "description": "This operation can be done only for admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get all data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "course_id": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "chapters"
        ],
        "summary": "Create chapters",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "course_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create chapter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "course_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/chapters/{id}": {
      "get": {
        "tags": [
          "chapters"
        ],
        "summary": "Show courses by id",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Chapter updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "course_id": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      },
      "put": {
        "tags": [
          "chapters"
        ],
        "summary": "Update chapter",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "These attributes are optional. You can update 1/2 attribute.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chapter updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      },
      "delete": {
        "tags": [
          "chapters"
        ],
        "summary": "Delete chapter",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Course has been deleted!"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      }
    },
    "/lessons": {
      "get": {
        "tags": [
          "lessons"
        ],
        "summary": "Show all lessons",
        "description": "This operation can be done only for admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get all data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "video": {
                          "type": "string"
                        },
                        "chapter_id": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "lessons"
        ],
        "summary": "Create lesson",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chapter_id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "video": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create chapter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "chapter_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "video": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/lessons/{id}": {
      "get": {
        "tags": [
          "lessons"
        ],
        "summary": "Show lesson by id",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "video": {
                          "type": "string"
                        },
                        "chapter_id": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      },
      "put": {
        "tags": [
          "lessons"
        ],
        "summary": "Update lesson",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "These attributes are optional. You can update 1/2 attribute.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "video": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chapter updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "video": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      },
      "delete": {
        "tags": [
          "lessons"
        ],
        "summary": "Delete lesson",
        "description": "This operation can be done only for admin.",
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lesson has been deleted!"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "JWT must be provided"
          }
        }
      }
    }
  }
}